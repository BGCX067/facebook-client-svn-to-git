	Для работы с Facebook разработчикам предоставляется Graph API. В основе социальной сети  лежит социальный граф, который состоит из объектов (людей, фотографий, событий, страниц и т.д.) и связей между ними (дружеских отношений, переписки и т.д.).  Graph API обеспечивает простое и непротиворечивое представление этого графа. 
Для получения информации из социальной сети используются запросы HTTPS. А их результаты предоставляются в формате JSON (Java Script Object Notation). 

	Каждый объект в социальном графе имеет уникальный идентификатор.   С помощью него можно получить доступ к свойствам объекта, используя следующий запрос:

	HTTPS://graph.facebook.com/ID ,  ID - где идентификатор объекта.

Например, официальная страница платформы Facebook имеет идентификатор 19292868552, следовательно, доступ к её свойствам можно получить следующим запросом: 

	HTTPS://graph.facebook.com/19292868552

	Кроме того информацию об объектах можно получить с помощью их имён. Например, для страницы Coca-cola: 

	HTTPS://graph.facebook.com/coca-cola

	Объекты в социальном графе Facebook связаны друг с другом различными способами. Информацию об этих связях можно получить с помощью следующего запроса:

	HTTPS://graph.facebook.com/ID/CONNECTION_TYPE , где CONNECTION_TYPE -тип связи, который может принимать значения: friends, likes, music и др.


Аутентификация и авторизация:

	В Facebook свободно можно получить доступ только к небольшой части данных объекта вроде  имени, фамилии и т.д. Для получения, например, сообщений необходимо получить разрешение пользователя, т.е. нужно пройти аутентификацию и авторизацию и получить access token.После этого можно использовать access token для выполнения запросов от имени пользователя:

	HTTPS://graph.facebook.com/ID?access_token=...

Для аутентификации и  авторизации Facebook использует  протокол OAuth 2.0. Его реализация в Graph API включает три шага:
1.	Аутентификация пользователя,
2.	Авторизация приложения,
3.	Аутентификация приложения.

	Имеется два способа работы с этим протоколом: с серверной стороны или с клиентской стороны. Предварительно необходимо зарегистрировать приложение и получить для него идентификатор.

Для аутентификации на стороне сервера необходимо сделать следующее:

1.Отправить запрос на аутентификацию пользователя и авторизацию приложения:

	HTTPS:// facebook.com/dialog/OAuth?client_id=APP_ID&redirect_uri=YOUR_URL&scope=email,read_stream , 

где APP_ID – идентификатор приложения, YOUR_URL – URL, на который необходимо направить пользователя после аутентификации, а в параметре scope – указывается список необходимых прав. При отсутствии параметра scope приложение получит права только на открытую информацию. 

После отправки запроса у пользователя в браузере откроется страница, на которой ему будет предложено веси e-mail и пароль от аккаунта. После их ввода аутентификация пользователя завершится.

2.Далее пользователю будет предложено наделить приложение запрошенными ранее правами. После его согласия приложение авторизовано. Пользователь перенаправляется на следующий адрес:

	HTTPS:// redirect_uri?code=AUTHO_CODE, 

где redirect_uri – указанный в запросе URL, а AUTHO_CODE – код авторизации.

3.Далее необходимо выполнить аутентификацию приложения и получить access_token.
Для этого выполняется запрос:

	HTTPS://graph.facebook.com/oauth/access_token?client_id=APP_ID&redirect_uri=YOUR_URL&client_secret=APP_SECRET&code=AUTHO_CODE, 

где APP_SECRET – секрет приложения, полученный при его регистрации. В случае достоверности секрета аутентификация приложения завершается. А сервер авторизации возвращает access_token.

Для аутентификации на стороне клиента выполняются те же действия, только к запросу из первого пункта добавляется параметр response_type со значением token. А access_token будет  передан как фрагмент URL, на который будет перенаправлен пользователь.


Настольные приложения

OAuth 2.0 явно не поддерживает настольные приложения, однако если вставить в него web-браузер, то можно выполнить аутентификацию как на стороне пользователя. В таком случае параметр redirect_uri  указывается со следующим значением:

	http://www.facebook.com/connect/login_success.html. 

В браузере откроется указанная страница, а фрагментом её URL будет access_token.

После аутентификации можно работать с данными пользователя в пределах прав, предоставленных пользователем.
